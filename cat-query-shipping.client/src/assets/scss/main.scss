@import "./_variables.scss";
@import "bootstrap";
@import "./_overrides.scss";
@import "./utilities.scss";
@import "./loaders.scss";
@import url('https://fonts.googleapis.com/css2?family=Gloria+Hallelujah&family=Marck+Script&family=Pacifico&family=Permanent+Marker&family=Sacramento&family=Ubuntu+Mono:wght@400;700&family=Yellowtail&display=swap');

.bg-dark-glass {
  background-color: #2a2f32a4;
  backdrop-filter: blur(10px);
}

.tooltip {
  .tooltip-inner {
    background-color: #1f2325d5 !important;
    backdrop-filter: blur(10px) !important;
  }
}


#app {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

body {
  font-family: 'Ubuntu Mono', monospace;
}

.font-handwritten {
  font-family: 'Permanent Marker', cursive;
  font-weight: bold;
}

.font-cursive {
  font-family: 'Sacramento', cursive;
}

.font-yellowtail {
  font-family: 'Yellowtail', cursive;
}

main {
  flex-grow: 1;
}

a {
  text-decoration: none;
}

input,
textarea,
select {
  &:not(:placeholder-shown) {
    &:valid {
      border: 2px solid $warning;
    }

    &:invalid {
      border: 2px dashed $danger;
    }
  }
}

form:invalid button[type="submit"] {
  filter: grayscale(1);
  pointer-events: none;
}

// STUB SCROLL BAR

body,
main,
div {
  &::-webkit-scrollbar-track {
    position: absolute;
    //  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
    border-radius: 10px;
    background-color: transparent;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 10px;
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .1);
    background-color: fade($dark, .6);
  }

  &::-webkit-scrollbar {
    position: absolute;
    width: 4px;
    background-color: transparent;
  }

}

.flex-grow {
  flex-grow: 1;
}

.no-click {
  cursor: not-allowed;
}


.cursor-locked {
  cursor: url('assets/img/locked.png') 1 1, not-allowed !important;
}

.cursor-invalid-url {
  cursor: url('assets/img/invalidurl.png') 1 1, not-allowed !important;
}

@mixin console-border($color, $dir: 1, $reverse: false, $radius: 10px) {
  border-style: solid;
  border-radius: $radius;

  @if($reverse ==false) {
    border-top: 5px solid lighten(adjust-hue($color, -10 * $dir), 5);
    border-left: 5px solid lighten(adjust-hue($color, -10 * $dir), 5);
    border-right: 5px solid saturate(darken(adjust-hue($color, 20 * $dir), 5), 10);
    border-bottom: 5px solid saturate(darken(adjust-hue($color, 20 * $dir ), 5), 10);
  }

  @else {
    border-top: 5px solid saturate(darken(adjust-hue($color, 20 * $dir ), 5), 10);
    border-left: 5px solid saturate(darken(adjust-hue($color, 20 * $dir), 5), 10);
    border-right: 5px solid lighten(adjust-hue($color, -10 * $dir), 5);
    border-bottom: 5px solid lighten(adjust-hue($color, -10 * $dir), 5);
  }
}

.glitch-text {
  position: relative;
  margin: 0 auto;
  color: var(--bs-info);
  font-size: 16px;
  letter-spacing: 0.01em;
  transform: scale3d(1, 1, 1);

  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    overflow: hidden;
    background: #161d1b;
    color: var(--bs-info);
    clip: rect(0, 900px, 0, 0);
  }

  &::before {
    left: 7px;
    text-shadow: 1px 0 var(--bs-danger);
    animation: glitch-effect 3s infinite linear alternate-reverse;
  }

  &::after {
    left: 3px;
    text-shadow: -1px 0 var(--bs-warning);
    animation: glitch-effect 2s infinite linear alternate-reverse;
  }
}

$steps: 20;

@keyframes glitch-effect {
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
    }
  }
}

@mixin glitch-text($primary, $secondary, $bg) {
  position: relative;
  margin: 0 auto;
  color: $primary;
  font-size: 16px;
  letter-spacing: 0.01em;
  transform: scale3d(1, 1, 1);

  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    overflow: hidden;
    background: $bg;
    color: $primary;
    clip: rect(0, 900px, 0, 0);
  }

  &::before {
    left: 7px;
    text-shadow: 1px 0 $secondary;
    animation: glitch-effect 3s infinite linear alternate-reverse;
  }

  &::after {
    left: 3px;
    text-shadow: -1px 0 adjust-hue($secondary, 50deg);
    animation: glitch-effect 2s infinite linear alternate-reverse;
  }
}

$steps: 20;

@keyframes glitch-effect {
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
    }
  }
}



// [class*="screen-theme"] {
//   min-height: 1em;
//   background-image: url('/src/assets/img/Textures/black-orchid.png');
//   border-top: 5px solid #315f8a;
//   border-left: 5px solid #315f8a;
//   border-bottom: 5px solid #55a6a8;
//   border-right: 5px solid #55a6a8;
//   box-shadow: inset 0px 0px 10px #a4d5a58c;
// }

.screen-on {
  animation: screen-on linear .5s forwards 1;
}

@keyframes sreen-on {
  0% {
    background-color: rgb(34, 105, 85);
  }

  100% {
    background-color: rgb(22, 29, 27);
  }
}

.comp-button {
  cursor: pointer;
  text-shadow: 0px 0px 2px rgba(32, 32, 32, 0.589);
  color: var(--bs-dark);
  background: rgb(255, 255, 226);
  border: 1px solid;
  border-radius: 10px;
  transform-style: preserve-3d;
  transform: translate3d(0em, -0.5em, -1em);
  transition: all 150ms cubic-bezier(0, 0, 0.58, 1);
}

.comp-button::before {
  position: absolute;
  content: "";
  width: 102%;
  height: 102%;
  top: -1px;
  left: -1px;
  border-radius: inherit;
  outline: 3px inset #55a6a8;
  transition: all 150ms cubic-bezier(0, 0, 0.58, 1);
  transform: translate3d(0, 0.75em, -1em);
}

.comp-button:disabled {
  background: rgb(189, 189, 189);
  cursor: not-allowed;
}

.comp-button:hover {
  transform: translate3d(0, -0.35em, -1em);
}

.comp-button:hover::before {
  transform: translate3d(0, 0.6em, -1em);
}

.comp-button:active {
  transform: translate3d(0em, 0.25em, -1em);
}

.comp-button:active::before {
  transform: translate3d(0, 0, -0.75em);
}

.comp-green {
  box-shadow: inset 0px 0px 25px 10px #a4d5a5;
  border-color: #bde4b1;

  &:hover {
    box-shadow: inset 0px 0px 25px 2px #a4d5a5;
  }

  &::before {
    background: #84b699;
  }
}

.comp-yellow {
  box-shadow: inset 0px 0px 25px 10px #fbe8a5;
  border-color: #fff1c1;

  &:hover {
    box-shadow: inset 0px 0px 25px 2px #fbe8a5;
  }

  &::before {
    background: #ebc390;
  }
}

.comp-red {
  box-shadow: inset 0px 0px 25px 10px #e97373;
  border-color: #ee8383;

  &:hover {
    box-shadow: inset 0px 0px 25px 2px #e97373;
  }

  &::before {
    background: #d65f73;
  }
}

.comp-blue {
  box-shadow: inset 0px 0px 25px 10px #67d2e6;
  border-color: #7edff0;

  &:hover {
    box-shadow: inset 0px 0px 25px 2px #67d2e6;
  }

  &::before {
    background: #4e9fce;
  }
}



.switch-button {
  border-radius: 45px;
  color: var(--bs-light) !important;
  background-color: #538abd;
  box-shadow: inset 0px 0px 25px 10px var(--bs-primary);
  border-color: #74a7d6;

  &::before {
    background-color: #315f8a;
  }
}

.physical-border {
  @include console-border($primary) // border-radius: 10px;
  // border-top: 5px solid #55a6a8;
  // border-left: 5px solid #55a6a8;
  // border-right: 5px solid #315f8a;
  // border-bottom: 5px solid #315f8a;
}

.plastic-shell {
  background-color: inherit;
  background-image: url(/src/assets/img/Textures/egg-shell.png);
  background-size: 215px;
}